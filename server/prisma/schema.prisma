// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                            String                  @id @default(uuid())
  firstName                     String
  lastName                      String
  email                         String                  @unique
  password                      String
  phoneNumber                   String?
  shippingAddressId             String?
  shippingAddress               ShippingAddress?
  createdAt                     DateTime                @default(now())
  updatedAt                     DateTime                @updatedAt
}

model ShippingAddress {
  id                            String                  @id @default(uuid())
  userId                        String                  @unique
  user                          User                    @relation(fields: [userId], references: [id])
  addressLine1                  String?
  addressLine2                  String?                
  city                          String?   
  country                       String?                               
  postalCode                    String?                                                 
  createdAt                     DateTime                @default(now())
  updatedAt                     DateTime                @updatedAt
}

model Category {
  id                            String                  @id @default(uuid())
  name                          String                  @unique
  subcategories                 Subcategory[]                   
}

model Subcategory {
  id                            String                  @id @default(uuid())
  name                          String                  @unique
  description                   String
  image                         String
  categoryId                    String
  category                      Category                @relation(fields: [categoryId], references: [id])
  products                      Product[]
}

model Color {
  id                            String                  @id @default(uuid())
  name                          String                  @unique
  hexCode                       String                  
  products                      Product[]
}

model Product {
  id                            String                  @id @default(uuid())
  name                          String                  @unique
  description                   String?
  price                         Float
  image                         String
  stock                         Int
  subcategoryId                 String
  subcategory                   Subcategory             @relation(fields: [subcategoryId], references: [id])
  colorId                       String
  color                         Color                   @relation(fields: [colorId], references: [id])
}